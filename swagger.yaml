openapi: 3.0.0
info:
  title: SDCS API
  description: API for storing and retrieving sensor data for SDCS
  version: 1.0.0
servers:
  - url: https://wajhhqp2zk.execute-api.us-east-2.amazonaws.com
paths:
  /sdcs/{sensor_type}/data:
    post:
      summary: Store sensor data
      parameters:
        - in: path
          name: sensor_type
          required: true
          schema:
            type: string
            enum:
              - compressor_amps
              - cond_fan_amps
              - liquid_line_pressure
              - liquid_line_temperature
              - return_air_co2
              - return_air_humidity
              - return_air_temperature
              - space_co2
              - space_humidity
              - space_temperature
              - suction_line_pressure
              - suction_line_temperature
              - supply_air_co2
              - supply_air_fan_amps
              - supply_air_humidity
              - supply_air_temperature
              - vibration_sensor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SensorData'
      responses:
        '200':
          description: Data stored successfully
        '400':
          description: Bad request
        '403':
          description: Forbidden - Invalid API Key
        '500':
          description: Internal server error
    get:
      summary: Get sensor data
      parameters:
        - in: path
          name: sensor_type
          required: true
          schema:
            type: string
            enum:
              - compressor_amps
              - cond_fan_amps
              - liquid_line_pressure
              - liquid_line_temperature
              - return_air_co2
              - return_air_humidity
              - return_air_temperature
              - space_co2
              - space_humidity
              - space_temperature
              - suction_line_pressure
              - suction_line_temperature
              - supply_air_co2
              - supply_air_fan_amps
              - supply_air_humidity
              - supply_air_temperature
              - vibration_sensor
              - log_data
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SensorData'
        '400':
          description: Bad request
        '403':
          description: Forbidden - Invalid API Key
        '500':
          description: Internal server error

    options:
      summary: Options sensor data
      parameters:
        - in: path
          name: sensor_type
          required: true
          schema:
            type: string
            enum:
              - compressor_amps
              - cond_fan_amps
              - liquid_line_pressure
              - liquid_line_temperature
              - return_air_co2
              - return_air_humidity
              - return_air_temperature
              - space_co2
              - space_humidity
              - space_temperature
              - suction_line_pressure
              - suction_line_temperature
              - supply_air_co2
              - supply_air_fan_amps
              - supply_air_humidity
              - supply_air_temperature
              - vibration_sensor
              - log_data
      responses:
        '200':
          description: Successful response


components:
  schemas:
    SensorData:
      type: object
      required:
        - timestamp
        - trend_flag
        - zone_id
        - building_id
        - status
        - value
      properties:
        timestamp:
          type: string
          format: date-time
          description: Format 'DD-MMM-YY HH:MM:SS AM/PM EDT'
        trend_flag:
          type: string
          enum: ['{start}', '{ }']
        zone_id:
          type: string
        building_id:
          type: string
        status:
          type: string
          enum: ['{ok}', '{fail}']
        value:
          oneOf:
            - type: number
            - type: string

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key

security:
  - ApiKeyAuth: []
